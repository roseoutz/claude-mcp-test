# MCP Codebase Analyzer - Nginx Configuration

server {
    listen 80;
    server_name localhost;
    
    # 보안을 위한 기본 인증 (선택사항)
    # auth_basic "MCP Admin Area";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    
    # 루트 경로
    location / {
        return 301 /dashboard;
    }
    
    # 대시보드 (추후 구현)
    location /dashboard {
        root /usr/share/nginx/html;
        try_files /index.html =404;
    }
    
    # ChromaDB Vector Store
    location /chromadb/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit 10;
        
        proxy_pass http://chromadb/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # ChromaDB 인증 헤더 전달
        proxy_set_header Authorization $http_authorization;
        
        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Redis Commander
    location /redis/ {
        limit_req zone=general_limit burst=10;
        
        proxy_pass http://redis_commander/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Basic Auth는 Redis Commander 자체에서 처리
        proxy_set_header Authorization $http_authorization;
    }
    
    # pgAdmin
    location /pgadmin/ {
        limit_req zone=general_limit burst=10;
        
        proxy_pass http://pgadmin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Script-Name /pgadmin;
        
        proxy_redirect off;
    }
    
    # MinIO S3 API
    location /minio-api/ {
        limit_req zone=api_limit burst=30;
        
        proxy_pass http://minio_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # S3 서명을 위한 헤더
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-Amz-Date $http_x_amz_date;
        proxy_set_header X-Amz-Content-Sha256 $http_x_amz_content_sha256;
        
        # 대용량 파일 업로드 지원
        client_max_body_size 5G;
        proxy_request_buffering off;
    }
    
    # MinIO Console
    location /minio/ {
        limit_req zone=general_limit burst=10;
        
        proxy_pass http://minio_console/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Health Check Endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 에러 페이지
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}